# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  s: [0.33, 0.50, 1024]

extra_scale: [1.00, 1.25, 512]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, SCDown, [512, 3, 2]] # 5-P4/16
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, SCDown, [1024, 3, 2]] # 7-P5/32
  - [-1, 3, C2fCIB, [1024, True, True]]
  - [-1, 1, SPPF, [1024, 5]] # 9
  - [-1, 1, PSA, [1024]] # 10

# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 6], 1, Concat, [1]] # cat backbone P4
  - [-1, 3, C2f, [512]] # 13

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 4], 1, Concat, [1]] # cat backbone P3
  - [-1, 3, C2f, [256]] # 16 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 13], 1, Concat, [1]] # cat head P4
  - [-1, 3, C2f, [512]] # 19 (P4/16-medium)

  - [-1, 1, SCDown, [512, 3, 2]]
  - [[-1, 10], 1, Concat, [1]] # cat head P5
  - [-1, 3, C2fCIB, [1024, True, True]] # 22 (P5/32-large)

  - [[16, 19, 22], 1, v10Detect, [nc]] # Detect(P3, P4, P5)

extra_head:
  - [16, 1, Conv, [256, 1, 1]] # 24
  - [19, 1, Conv, [512, 1, 1]] # 25
  - [22, 1, Conv, [1024, 1, 1]] # 26

  - [[24, 25, 26], 1, v10Detect, [nc]] # Detect(P3, P4, P5) 27

extra_head_2:
  - [16, 1, Conv, [256, 1, 1]] # 28
  - [19, 1, Conv, [512, 1, 1]] # 29
  - [22, 1, Conv, [1024, 1, 1]] # 30

  - [[28, 29, 30], 1, v10Detect, [nc]] # Detect(P3, P4, P5) 31

extra_head_3:
  - [16, 1, Conv, [256, 1, 1]] # 32
  - [19, 1, Conv, [512, 1, 1]] # 33
  - [22, 1, Conv, [1024, 1, 1]] # 34

  - [[32, 33, 34], 1, v10Detect, [nc]] # Detect(P3, P4, P5) 35

extra_head_4:
  - [16, 1, Conv, [256, 1, 1]] # 36
  - [19, 1, Conv, [512, 1, 1]] # 37
  - [22, 1, Conv, [1024, 1, 1]] # 38

  - [[36, 37, 38], 1, v10Detect, [nc]] # Detect(P3, P4, P5) 39